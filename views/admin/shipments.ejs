<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <!-- Admin CSS -->
    <link rel="stylesheet" href="/assets/css/admin.css">
</head>
<body>
    <div class="dashboard-content">
        <!-- Success Message Alert -->
        <% if (typeof req !== 'undefined' && req.query && req.query.message) { %>
            <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
                <%= req.query.message %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <% } %>

        <!-- Search bar -->
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <form method="GET" action="/admin/shipments" class="row g-3">
                    <div class="col-md-8">
                        <div class="input-group">
                            <input 
                                type="search" 
                                class="form-control" 
                                placeholder="Search by tracking ID, customer name, email, phone, origin, destination..." 
                                name="search" 
                                value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
                            >
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search me-1"></i> Search
                            </button>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select name="status" class="form-select" onchange="this.form.submit()">
                            <option value="" <%= !statusFilter ? 'selected' : '' %>>All Statuses</option>
                            <option value="Pending" <%= statusFilter === 'Pending' ? 'selected' : '' %>>Pending</option>
                            <option value="In Transit" <%= statusFilter === 'In Transit' ? 'selected' : '' %>>In Transit</option>
                            <option value="Delivered" <%= statusFilter === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                            <option value="Delayed" <%= statusFilter === 'Delayed' ? 'selected' : '' %>>Delayed</option>
                            <option value="Cancelled" <%= statusFilter === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        </select>
                    </div>
                </form>
            </div>
        </div>

        <div class="row g-3 align-items-center mx-0 mb-4">
            <div class="col-md-6">
                <span class="text-muted">Total: <%= totalShipments %> shipments</span>
            </div>
        </div>

        <div class="card shadow-sm mx-0 mb-4">
            <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                <h5 class="mb-0 fw-semibold">Shipments</h5>
                <a href="/admin/shipments/create" class="btn btn-primary btn-sm">
                    <i class="fas fa-plus me-1"></i> New Shipment
                </a>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Tracking ID</th>
                                <th>Customer</th>
                                <th>From / To</th>
                                <th>Status</th>
                                <th>Created</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (shipments && shipments.length > 0) { %>
                                <% shipments.forEach(function(shipment) { %>
                                    <tr>
                                        <td class="fw-medium"><%= shipment.trackingId %></td>
                                        <td>
                                            <div><%= shipment.customerName %></div>
                                            <small class="text-muted"><%= shipment.customerEmail %></small>
                                        </td>
                                        <td>
                                            <div><small class="text-muted">From:</small> <%= shipment.origin %></div>
                                            <div><small class="text-muted">To:</small> <%= shipment.destination %></div>
                                        </td>
                                        <td>
                                            <% let badgeClass = ''; %>
                                            <% if (shipment.status === 'Pending') { %>
                                                <% badgeClass = 'badge-pending'; %>
                                            <% } else if (shipment.status === 'In Transit') { %>
                                                <% badgeClass = 'badge-transit'; %>
                                            <% } else if (shipment.status === 'Delivered') { %>
                                                <% badgeClass = 'badge-delivered'; %>
                                            <% } else if (shipment.status === 'Delayed') { %>
                                                <% badgeClass = 'badge-delayed'; %>
                                            <% } else if (shipment.status === 'Cancelled') { %>
                                                <% badgeClass = 'badge-cancelled'; %>
                                            <% } else { %>
                                                <% badgeClass = 'badge-secondary'; %>
                                            <% } %>
                                            <span class="badge <%= badgeClass %>"><%= shipment.status %></span>
                                        </td>
                                        <td><%= new Date(shipment.createdAt).toLocaleDateString() %></td>
                                        <td>
                                            <div class="d-flex gap-1">
                                                <a href="/admin/shipments/edit/<%= shipment._id %>" class="btn btn-sm btn-outline-secondary">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button 
                                                    class="btn btn-sm btn-outline-danger delete-shipment-btn" 
                                                    data-id="<%= shipment._id %>"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#deleteShipmentModal"
                                                >
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="text-center py-3">No shipments found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        <% if (totalPages > 1) { %>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item <%= currentPage == 1 ? 'disabled' : '' %>">
                        <a class="page-link" href="/admin/shipments?page=<%= currentPage-1 %><%= statusFilter ? '&status='+statusFilter : '' %><%= searchQuery ? '&search='+encodeURIComponent(searchQuery) : '' %>" tabindex="-1" aria-disabled="<%= currentPage == 1 %>">Previous</a>
                    </li>
                    
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= currentPage == i ? 'active' : '' %>">
                            <a class="page-link" href="/admin/shipments?page=<%= i %><%= statusFilter ? '&status='+statusFilter : '' %><%= searchQuery ? '&search='+encodeURIComponent(searchQuery) : '' %>"><%= i %></a>
                        </li>
                    <% } %>
                    
                    <li class="page-item <%= currentPage == totalPages ? 'disabled' : '' %>">
                        <a class="page-link" href="/admin/shipments?page=<%= currentPage+1 %><%= statusFilter ? '&status='+statusFilter : '' %><%= searchQuery ? '&search='+encodeURIComponent(searchQuery) : '' %>" aria-disabled="<%= currentPage == totalPages %>">Next</a>
                    </li>
                </ul>
            </nav>
        <% } %>

        <!-- Delete Shipment Modal -->
        <div class="modal fade" id="deleteShipmentModal" tabindex="-1" aria-labelledby="deleteShipmentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteShipmentModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this shipment? This action cannot be undone.
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                          <span class="button-text">Delete</span>
                          <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="toast-container position-fixed bottom-0 end-0 p-3">
            <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-success text-white">
                    <strong class="me-auto">Success</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Shipment deleted successfully.
                </div>
            </div>
            <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-danger text-white">
                    <strong class="me-auto">Error</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Error deleting shipment. Please try again.
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Admin JS -->
    <script>
        console.log('Shipments page Admin JS executing...'); // Log to confirm script runs

        let selectedShipmentId = null;
        
        // Ensure the DOM is fully loaded before attaching listeners
        document.addEventListener('DOMContentLoaded', (event) => {
            console.log('DOM fully loaded and parsed. Attaching listeners...');

            // Handle delete shipment button click (to set the ID)
            document.querySelectorAll('.delete-shipment-btn').forEach(button => {
                button.addEventListener('click', function() {
                    selectedShipmentId = this.getAttribute('data-id');
                    console.log('Delete button clicked, selectedShipmentId set to:', selectedShipmentId);
                });
            });
            
            // Handle confirm delete button
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            if (confirmBtn) {
                console.log('Found confirmDeleteBtn, attaching click listener.');
                confirmBtn.addEventListener('click', function() {
                  console.log('Confirm Delete Button Clicked! Attempting to delete shipment. Selected ID:', selectedShipmentId);
                  if (!selectedShipmentId) {
                    console.error('No shipment ID selected for deletion.');
                    return;
                  }

                  const deleteBtn = this;
                  const buttonText = deleteBtn.querySelector('.button-text');
                  const spinner = deleteBtn.querySelector('.spinner-border');

                  // Show loading spinner
                  console.log('Showing loading indicator.');
                  deleteBtn.disabled = true;
                  buttonText.textContent = 'Deleting...';
                  spinner.classList.remove('d-none');
                  
                  console.log(`Sending DELETE request to: /admin/shipments/delete/${selectedShipmentId}`);
                  fetch(`/admin/shipments/delete/${selectedShipmentId}`, {
                    method: 'DELETE',
                    headers: {
                      'Content-Type': 'application/json',
                    }
                  })
                  .then(response => {
                    console.log('Received response from server:', response);
                    if (response.ok) {
                      console.log('Response status OK (2xx). Parsing JSON...');
                      return response.json().then(data => {
                        console.log('Parsed JSON response:', data);
                        // Show success toast
                        console.log('Showing success toast.');
                        const successToast = new bootstrap.Toast(document.getElementById('successToast'));
                        successToast.show();
                        
                        // Hide modal
                        console.log('Hiding delete modal.');
                        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteShipmentModal'));
                        modal.hide();
                        
                        // Reload page to reflect changes
                        console.log('Reloading page in 2 seconds...');
                        setTimeout(() => window.location.reload(), 2000);
                      });
                    } else {
                      console.error('Response status not OK:', response.status, response.statusText);
                      return response.text().then(text => {
                          console.error('Error response body:', text);
                          throw new Error(`Failed to delete shipment. Status: ${response.status}`);
                      }).catch(parseError => {
                          console.error('Could not parse error response body:', parseError);
                          throw new Error(`Failed to delete shipment. Status: ${response.status}`);
                      });
                    }
                  })
                  .catch(error => {
                    console.error('Fetch error occurred:', error);
                    console.log('Showing error toast.');
                    const errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
                    errorToast.show();
                  })
                  .finally(() => {
                      console.log('Resetting button state.');
                      deleteBtn.disabled = false;
                      buttonText.textContent = 'Delete';
                      spinner.classList.add('d-none');
                  });
                });
            } else {
                console.error('Could not find element with ID confirmDeleteBtn to attach listener.');
            }
        });
    </script>
</body>
</html> 