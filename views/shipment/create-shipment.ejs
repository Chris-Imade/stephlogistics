  <style>
    /* Modern Color Scheme and Variables */
    :root {
      --primary: #2a9d8f;
      --primary-light: #4895ef;
      --primary-dark: #0c3c37;
      --secondary: #4cc9f0;
      --accent: #f72585;
      --success: #06d6a0;
      --warning: #ffd166;
      --danger: #ef476f;
      --dark: #1b263b;
      --dark-light: #415a77;
      --light: #f8f9fa;
      --white: #ffffff;
      --gray-100: #f8f9fa;
      --gray-200: #e9ecef;
      --gray-300: #dee2e6;
      --gray-400: #ced4da;
      --gray-500: #adb5bd;
      --gray-600: #6c757d;
      --gray-700: #495057;
      --gray-800: #343a40;
      --shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --radius-sm: 0.25rem;
      --radius: 0.5rem;
      --radius-lg: 1rem;
      --transition: all 0.3s ease;
      --font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
    }

    /* Reset & Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: var(--font-family);
      background-color: var(--gray-100);
      color: var(--dark);
      line-height: 1.6;
      min-height: 100vh;
    }

    h1, h3, h4, h5, h6 {
      margin-bottom: 1rem;
      font-weight: 600;
      line-height: 1.2;
      color: var(--dark);
    }
    h2 {
      margin-bottom: 1rem;
      font-weight: 600;
      line-height: 1.2;
      color: var(--white);
    }

    /* Layout */
    .create-shipment-container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 2rem 1rem;
    }

    .container {
      width: 100%;
      max-width: 900px;
      margin: 0 auto;
    }

    .card {
      background-color: var(--white);
      border-radius: var(--radius);
      box-shadow: var(--shadow-lg);
      overflow: hidden;
      margin-bottom: 2rem;
      border: 1px solid var(--gray-200);
    }

    /* Header */
    .card-header {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: var(--white);
      padding: 1.5rem;
      text-align: center;
      position: relative;
    }

    .card-header h2 {
      font-size: 1.75rem;
      margin-bottom: 0.5rem;
    }

    .card-header p {
      opacity: 0.9;
      margin: 0;
    }

    /* Body */
    .card-body {
      padding: 2rem;
    }

    /* Progress Bar */
    .progress-container {
      margin-bottom: 2rem;
      overflow: hidden;
    }

    .progress-bar {
      background-color: var(--gray-200);
      border-radius: var(--radius-lg);
      height: 0.6rem;
      position: relative;
      overflow: hidden;
      margin-bottom: 1.5rem;
    }

    .progress {
      height: 100%;
      border-radius: var(--radius-lg);
      background: linear-gradient(90deg, var(--primary-light), var(--primary));
      width: 0%;
      transition: width 0.4s ease;
      position: relative;
    }

    .progress-steps {
      display: flex;
      justify-content: space-between;
      position: relative;
    }

    .progress-step {
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
      z-index: 1;
      width: 20%;
      font-size: 0.85rem;
      color: var(--gray-600);
      transition: var(--transition);
    }

    .progress-step-icon {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 2.5rem;
      height: 2.5rem;
      background-color: var(--white);
      border: 2px solid var(--gray-300);
      border-radius: 50%;
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: var(--gray-600);
      transition: var(--transition);
    }

    .progress-step.active .progress-step-icon {
      background-color: var(--primary);
      border-color: var(--primary);
      color: var(--white);
      box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.3);
    }

    .progress-step.completed .progress-step-icon {
      background-color: var(--success);
      border-color: var(--success);
      color: var(--white);
    }

    .progress-step.active {
      color: var(--primary);
      font-weight: 500;
    }

    .progress-step.completed {
      color: var(--success);
    }

    .progress-step-label {
      text-align: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 100%;
    }

    .step-form {
      display: none;
    }

    .step-form.active {
      display: block;
      animation: fadeIn 0.5s ease;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    /* Form Elements */
    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-row {
      display: flex;
      flex-wrap: wrap;
      margin: 0 -0.75rem;
    }

    .form-col {
      flex: 1 0 0%;
      padding: 0 0.75rem;
    }

    .form-label {
      display: block;
      font-weight: 500;
      margin-bottom: 0.5rem;
      color: var(--dark);
    }

    .form-control,
    .form-select {
      display: block;
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      line-height: 1.5;
      color: var(--dark);
      background-color: var(--white);
      background-clip: padding-box;
      border: 1px solid var(--gray-300);
      border-radius: var(--radius);
      transition: var(--transition);
    }

    .form-control:focus,
    .form-select:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
    }

    .form-control::placeholder {
      color: var(--gray-500);
    }

    .form-check {
      display: flex;
      align-items: center;
      margin-bottom: 0.75rem;
    }

    .form-check-input {
      margin-right: 0.75rem;
      width: 1.2rem;
      height: 1.2rem;
      cursor: pointer;
    }

    .form-check-label {
      cursor: pointer;
    }

    /* Section Headings */
    .section-heading {
      color: var(--primary-dark);
      margin-top: 0.5rem;
      margin-bottom: 1.5rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid var(--gray-200);
    }

    .subsection-heading {
      font-size: 1.1rem;
      color: var(--dark-light);
      margin-top: 1.5rem;
      margin-bottom: 1rem;
    }

    /* Buttons */
    .btn-group {
      display: flex;
      justify-content: space-between;
      margin-top: 2rem;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      font-weight: 500;
      line-height: 1.5;
      text-align: center;
      white-space: nowrap;
      vertical-align: middle;
      cursor: pointer;
      user-select: none;
      border: 1px solid transparent;
      border-radius: var(--radius);
      transition: var(--transition);
    }

    .btn-primary {
      color: var(--white);
      background: linear-gradient(to right, var(--primary), var(--primary-dark));
      border-color: var(--primary);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .btn-primary:hover {
      background: linear-gradient(to right, var(--primary-dark), var(--primary-dark));
      border-color: var(--primary-dark);
      transform: translateY(-1px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
    }

    .btn-outline {
      color: var(--primary);
      background-color: transparent;
      border-color: var(--primary);
    }

    .btn-outline:hover {
      color: var(--white);
      background-color: var(--primary);
      border-color: var(--primary);
    }

    .btn-success {
      color: var(--white);
      background: linear-gradient(to right, var(--success), #04aa82);
      border-color: var(--success);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .btn-success:hover {
      background: linear-gradient(to right, #04aa82, #038f6a);
      border-color: #04aa82;
      transform: translateY(-1px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
    }

    /* Shipping Options */
    .shipping-options {
      margin-top: 1rem;
    }

    .shipping-option {
      border: 1px solid var(--gray-300);
      border-radius: var(--radius);
      padding: 1rem;
      margin-bottom: 1rem;
      transition: var(--transition);
      cursor: pointer;
      display: flex;
      align-items: flex-start;
    }

    .shipping-option:hover {
      border-color: var(--primary);
      background-color: var(--gray-100);
    }

    .shipping-option input {
      margin-top: 0.25rem;
    }

    .shipping-option.selected {
      border-color: var(--primary);
      background-color: rgba(67, 97, 238, 0.05);
      box-shadow: 0 0 0 1px var(--primary);
    }

    .option-details {
      margin-left: 1rem;
      flex: 1;
    }

    .option-details h4 {
      margin-bottom: 0.25rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .option-details p {
      color: var(--gray-600);
      margin-bottom: 0.25rem;
    }

    .price {
      font-weight: 600;
      color: var(--primary-dark);
    }

    /* Order Summary */
    .order-summary {
      background-color: var(--gray-100);
      border-radius: var(--radius);
      padding: 1.5rem;
      margin-top: 2rem;
      border: 1px solid var(--gray-200);
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem 0;
      border-bottom: 1px dashed var(--gray-300);
    }

    .summary-row:last-child {
      border-bottom: none;
    }

    .summary-row.total {
      margin-top: 0.5rem;
      padding-top: 0.75rem;
      border-top: 2px solid var(--gray-300);
      font-size: 1.2rem;
      font-weight: 600;
      color: var(--primary-dark);
    }

    /* Credit Card Styling */
    .cc-number-input {
      display: flex;
      gap: 0.5rem;
    }

    .cc-number-input input {
      flex: 1;
      text-align: center;
    }

    .cc-expiry-cvv {
      display: flex;
      gap: 1rem;
    }

    .cc-expiry-cvv .form-group {
      flex: 1;
    }

    /* Payment Method Icons */
    .payment-methods {
      display: flex;
      gap: 1rem;
      margin-top: 0.5rem;
    }

    .payment-method {
      border: 1px solid var(--gray-300);
      border-radius: var(--radius);
      padding: 1rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      cursor: pointer;
      transition: var(--transition);
      flex: 1;
    }

    .payment-method:hover {
      border-color: var(--primary);
    }

    .payment-method.selected {
      border-color: var(--primary);
      background-color: rgba(67, 97, 238, 0.05);
      box-shadow: 0 0 0 1px var(--primary);
    }

    .payment-method-icon {
      font-size: 1.5rem;
      color: var(--primary);
    }

    /* Success Message */
    .success-message {
      display: none;
      text-align: center;
      padding: 2rem;
    }

    .success-icon {
      font-size: 4rem;
      color: var(--success);
      margin-bottom: 1rem;
    }

    /* Form Validation */
    .is-invalid {
      border-color: var(--danger) !important;
    }

    .invalid-feedback {
      display: none;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875rem;
      color: var(--danger);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .card-body {
        padding: 1.5rem;
      }

      .progress-step-label {
        font-size: 0.75rem;
      }

      .progress-step-icon {
        width: 2rem;
        height: 2rem;
        font-size: 0.85rem;
      }

      .form-row {
        flex-direction: column;
      }

      .form-col {
        width: 100%;
        padding: 0;
      }

      .cc-number-input {
        flex-wrap: wrap;
      }

      .cc-number-input input {
        width: calc(50% - 0.25rem);
      }

      .payment-methods {
        flex-direction: column;
      }
    }

    @media (max-width: 576px) {
      .card-header h2 {
        font-size: 1.5rem;
      }

      .btn {
        padding: 0.625rem 1.25rem;
      }

      .progress-step-icon {
        width: 1.75rem;
        height: 1.75rem;
        font-size: 0.75rem;
      }

      .progress-step-label {
        display: none;
      }
    }

    /* Icons */
    .icon {
      display: inline-block;
      width: 1em;
      height: 1em;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
      vertical-align: middle;
    }

    /* Helper Classes */
    .text-center {
      text-align: center;
    }

    .mt-1 {
      margin-top: 0.5rem;
    }

    .mt-2 {
      margin-top: 1rem;
    }

    .mt-3 {
      margin-top: 1.5rem;
    }

    .mt-4 {
      margin-top: 2rem;
    }

    .mb-1 {
      margin-bottom: 0.5rem;
    }

    .mb-2 {
      margin-bottom: 1rem;
    }

    .mb-3 {
      margin-bottom: 1.5rem;
    }

    .mb-4 {
      margin-bottom: 2rem;
    }

    .hidden {
      display: none;
    }
  </style>
  
  <div class="create-shipment-container" style="margin-top: 5rem;">
    <div class="container">
      <div class="card">
        <div class="card-header">
          <h2>Create New Shipment</h2>
          <p>Fast, reliable, worldwide shipping solutions</p>
        </div>
        <div class="card-body">
          <div class="progress-container">
            <div class="progress-bar">
              <div class="progress" id="progress-bar"></div>
            </div>
            <div class="progress-steps">
              <div class="progress-step active" data-step="1">
                <div class="progress-step-icon">1</div>
                <div class="progress-step-label">Customer Info</div>
              </div>
              <div class="progress-step" data-step="2">
                <div class="progress-step-icon">2</div>
                <div class="progress-step-label">Addresses</div>
              </div>
              <div class="progress-step" data-step="3">
                <div class="progress-step-icon">3</div>
                <div class="progress-step-label">Package Details</div>
              </div>
              <div class="progress-step" data-step="4">
                <div class="progress-step-icon">4</div>
                <div class="progress-step-label">Shipping Options</div>
              </div>
              <div class="progress-step" data-step="5">
                <div class="progress-step-icon">5</div>
                <div class="progress-step-label">Payment</div>
              </div>
            </div>
          </div>

          <form id="shipment-form">
            <!-- Step 1: Customer Information -->
            <div id="step-1" class="step-form active">
              <h3 class="section-heading">Customer Information</h3>
              <div class="form-row">
                <div class="form-col">
                  <div class="form-group">
                    <label for="first-name" class="form-label">First Name</label>
                    <input type="text" id="first-name" name="first-name" class="form-control" required>
                  </div>
                </div>
                <div class="form-col">
                  <div class="form-group">
                    <label for="last-name" class="form-label">Last Name</label>
                    <input type="text" id="last-name" name="last-name" class="form-control" required>
                  </div>
                </div>
              </div>
              <div class="form-group">
                <label for="email" class="form-label">Email Address</label>
                <input type="email" id="email" name="email" class="form-control" required>
              </div>
              <div class="form-group">
                <label for="phone" class="form-label">Phone Number</label>
                <input type="tel" id="phone" name="phone" class="form-control" placeholder="+44 7700 900000" required>
              </div>
              <div class="form-group">
                <label for="company" class="form-label">Company Name (Optional)</label>
                <input type="text" id="company" name="company" class="form-control">
              </div>
              <div class="form-group">
                <label for="reference" class="form-label">Order Reference (Optional)</label>
                <input type="text" id="reference" name="reference" class="form-control" placeholder="Your internal reference number">
              </div>
              <div class="btn-group">
                <div></div> <!-- Empty div for flex spacing -->
                <button type="button" class="btn btn-primary" id="btn-step-1">Continue <span class="icon">→</span></button>
              </div>
            </div>

            <!-- Step 2: Shipment Addresses -->
            <div id="step-2" class="step-form">
              <h3 class="section-heading">Shipment Addresses</h3>
              
              <h4 class="subsection-heading">Origin Address</h4>
              <div class="form-group">
                <label for="origin-address" class="form-label">Street Address</label>
                <input type="text" id="origin-address" name="origin-address" class="form-control" required>
              </div>
              <div class="form-row">
                <div class="form-col">
                  <div class="form-group">
                    <label for="origin-city" class="form-label">City</label>
                    <input type="text" id="origin-city" name="origin-city" class="form-control" required>
                  </div>
                </div>
                <div class="form-col">
                  <div class="form-group">
                    <label for="origin-postal-code" class="form-label">Postal Code</label>
                    <input type="text" id="origin-postal-code" name="origin-postal-code" class="form-control" required>
                  </div>
                </div>
              </div>
              <div class="form-row">
                <div class="form-col">
                  <div class="form-group">
                    <label for="origin-state" class="form-label">State/Province/Region</label>
                    <input type="text" id="origin-state" name="origin-state" class="form-control">
                  </div>
                </div>
                <div class="form-col">
                  <div class="form-group">
                    <label for="origin-country" class="form-label">Country</label>
                    <select id="origin-country" name="origin-country" class="form-select" required>
                      <option value="">Select Country</option>
                      <option value="GB">United Kingdom</option>
                      <option value="US">United States</option>
                      <option value="CA">Canada</option>
                      <option value="AU">Australia</option>
                      <option value="DE">Germany</option>
                      <option value="FR">France</option>
                      <option value="IT">Italy</option>
                      <option value="ES">Spain</option>
                      <option value="JP">Japan</option>
                      <option value="CN">China</option>
                    </select>
                  </div>
                </div>
              </div>

              <h4 class="subsection-heading">Destination Address</h4>
              <div class="form-group">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="same-as-origin" name="same-as-origin">
                  <label class="form-check-label" for="same-as-origin">Same as origin address</label>
                </div>
              </div>
              <div id="destination-address-fields">
                <div class="form-group">
                  <label for="destination-address" class="form-label">Street Address</label>
                  <input type="text" id="destination-address" name="destination-address" class="form-control" required>
                </div>
                <div class="form-row">
                  <div class="form-col">
                    <div class="form-group">
                      <label for="destination-city" class="form-label">City</label>
                      <input type="text" id="destination-city" name="destination-city" class="form-control" required>
                    </div>
                  </div>
                  <div class="form-col">
                    <div class="form-group">
                      <label for="destination-postal-code" class="form-label">Postal Code</label>
                      <input type="text" id="destination-postal-code" name="destination-postal-code" class="form-control" required>
                    </div>
                  </div>
                </div>
                <div class="form-row">
                  <div class="form-col">
                    <div class="form-group">
                      <label for="destination-state" class="form-label">State/Province/Region</label>
                      <input type="text" id="destination-state" name="destination-state" class="form-control">
                    </div>
                  </div>
                  <div class="form-col">
                    <div class="form-group">
                      <label for="destination-country" class="form-label">Country</label>
                      <select id="destination-country" name="destination-country" class="form-select" required>
                        <option value="">Select Country</option>
                        <option value="GB">United Kingdom</option>
                        <option value="US">United States</option>
                        <option value="CA">Canada</option>
                        <option value="AU">Australia</option>
                        <option value="DE">Germany</option>
                        <option value="FR">France</option>
                        <option value="IT">Italy</option>
                        <option value="ES">Spain</option>
                        <option value="JP">Japan</option>
                        <option value="CN">China</option>
                      </select>
                    </div>
                  </div>
                </div>
              </div>

              <div class="btn-group">
                <button type="button" class="btn btn-outline" id="btn-back-1"><span class="icon">←</span> Back</button>
                <button type="button" class="btn btn-primary" id="btn-step-2">Continue <span class="icon">→</span></button>
              </div>
            </div>

            <!-- Step 3: Package Information -->
            <div id="step-3" class="step-form">
              <h3 class="section-heading">Package Information</h3>
              <div class="form-group">
                <label for="package-type" class="form-label">Package Type</label>
                <select id="package-type" name="package-type" class="form-select" required>
                  <option value="">Select Package Type</option>
                  <option value="envelope">Envelope</option>
                  <option value="small-package">Small Package</option>
                  <option value="medium-package">Medium Package</option>
                  <option value="large-package">Large Package</option>
                  <option value="pallet">Pallet</option>
                </select>
              </div>
              <div class="form-group">
                <label for="weight" class="form-label">Weight (kg)</label>
                <input type="number" id="weight" name="weight" class="form-control" step="0.1" min="0.1" required>
              </div>
              <div class="form-group">
                <label class="form-label">Dimensions (cm)</label>
                <div class="form-row">
                  <div class="form-col">
                    <input type="number" id="length" name="length" class="form-control" placeholder="Length" step="0.1" min="0.1" required>
                  </div>
                  <div class="form-col">
                    <input type="number" id="width" name="width" class="form-control" placeholder="Width" step="0.1" min="0.1" required>
                  </div>
                  <div class="form-col">
                    <input type="number" id="height" name="height" class="form-control" placeholder="Height" step="0.1" min="0.1" required>
                  </div>
                </div>
              </div>
              
              <h4 class="subsection-heading">Package Contents</h4>
              <div class="form-group">
                <label for="contents" class="form-label">Description of Contents</label>
                <textarea id="contents" name="contents" class="form-control" rows="3" required></textarea>
              </div>
              
              <div class="form-group">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="fragile" name="fragile">
                  <label class="form-check-label" for="fragile">This shipment contains fragile items</label>
                </div>
              </div>
              <div class="form-group">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="insurance" name="insurance">
                  <label class="form-check-label" for="insurance">Add shipping insurance (recommended)</label>
                </div>
              </div>
              <div id="insurance-value-group" class="form-group hidden">
                <label for="declared-value" class="form-label">Declared Value (£)</label>
                <input type="number" id="declared-value" name="declared-value" class="form-control" step="0.01" min="1">
              </div>

              <div class="btn-group">
                <button type="button" class="btn btn-outline" id="btn-back-2"><span class="icon">←</span> Back</button>
                <button type="button" class="btn btn-primary" id="btn-step-3">Continue <span class="icon">→</span></button>
              </div>
            </div>

            <!-- Step 4: Shipping Options -->
            <div id="step-4" class="step-form">
              <h3 class="section-heading">Shipping Options</h3>
              <p>Select the shipping method that best fits your needs:</p>
              
              <div class="shipping-options">
                <div class="shipping-option" data-option="express">
                  <input type="radio" id="shipping-express" name="shipping-method" value="express" data-price="45.95" required>
                  <div class="option-details">
                    <h4>Express Delivery <span class="price">£45.95</span></h4>
                    <p>Delivery in 1-2 business days</p>
                    <p>Full tracking and signature on delivery</p>
                  </div>
                </div>
                
                <div class="shipping-option" data-option="priority">
                  <input type="radio" id="shipping-priority" name="shipping-method" value="priority" data-price="58.50" required>
                  <div class="option-details">
                    <h4>Priority Delivery <span class="price">£58.50</span></h4>
                    <p>Guaranteed next business day delivery</p>
                    <p>Full tracking and signature on delivery</p>
                  </div>
                </div>
                
                <div class="shipping-option" data-option="standard">
                  <input type="radio" id="shipping-standard" name="shipping-method" value="standard" data-price="32.75" required>
                  <div class="option-details">
                    <h4>Standard Delivery <span class="price">£32.75</span></h4>
                    <p>Delivery in 3-5 business days</p>
                    <p>Full tracking included</p>
                  </div>
                </div>
                
                <div class="shipping-option" data-option="economy">
                  <input type="radio" id="shipping-economy" name="shipping-method" value="economy" data-price="24.99" required>
                  <div class="option-details">
                    <h4>Economy Delivery <span class="price">£24.99</span></h4>
                    <p>Delivery in 5-7 business days</p>
                    <p>Basic tracking included</p>
                  </div>
                </div>
              </div>
              
              <div class="form-group mt-3">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="saturday-delivery" name="saturday-delivery" data-price="12.50">
                  <label class="form-check-label" for="saturday-delivery">Add Saturday Delivery (+£12.50)</label>
                </div>
              </div>
              
              <div class="btn-group">
                <button type="button" class="btn btn-outline" id="btn-back-3"><span class="icon">←</span> Back</button>
                <button type="button" class="btn btn-primary" id="btn-step-4">Continue <span class="icon">→</span></button>
              </div>
            </div>

            <!-- Step 5: Payment & Review -->
            <div id="step-5" class="step-form">
              <h3 class="section-heading">Payment & Review</h3>
              
              <div class="order-summary">
                <h4>Order Summary</h4>
                <div class="summary-row">
                  <span>Shipping Service:</span>
                  <span id="summary-service">-</span>
                </div>
                <div class="summary-row">
                  <span>Base Shipping Cost:</span>
                  <span id="summary-shipping">£0.00</span>
                </div>
                <div class="summary-row" id="summary-row-saturday" style="display: none;">
                  <span>Saturday Delivery:</span>
                  <span id="summary-saturday">£12.50</span>
                </div>
                <div class="summary-row" id="summary-row-insurance" style="display: none;">
                  <span>Insurance:</span>
                  <span id="summary-insurance">£0.00</span>
                </div>
                <div class="summary-row">
                  <span>VAT (20%):</span>
                  <span id="summary-vat">£0.00</span>
                </div>
                <div class="summary-row total">
                  <span>Total:</span>
                  <span id="summary-total">£0.00</span>
                </div>
              </div>
              
              <h4 class="subsection-heading">Payment Method</h4>
              <div class="payment-methods">
                <div class="payment-method" data-method="card">
                  <input type="radio" id="payment-card" name="payment-method" value="card" checked required>
                  <div class="payment-method-icon">💳</div>
                  <div>Credit/Debit Card</div>
                </div>
                <div class="payment-method" data-method="paypal">
                  <input type="radio" id="payment-paypal" name="payment-method" value="paypal" required>
                  <div class="payment-method-icon">🅿️</div>
                  <div>PayPal</div>
                </div>
              </div>
              
              <div id="card-payment-fields" class="mt-3">
                <div class="form-group">
                  <label for="card-name" class="form-label">Name on Card</label>
                  <input type="text" id="card-name" name="card-name" class="form-control" required>
                </div>
                <div class="form-group">
                  <label for="card-number" class="form-label">Card Number</label>
                  <input type="text" id="card-number" name="card-number" class="form-control" placeholder="1234 5678 9012 3456" required>
                </div>
                <div class="form-row">
                  <div class="form-col">
                    <div class="form-group">
                      <label for="card-expiry" class="form-label">Expiry Date</label>
                      <input type="text" id="card-expiry" name="card-expiry" class="form-control" placeholder="MM/YY" required>
                    </div>
                  </div>
                  <div class="form-col">
                    <div class="form-group">
                      <label for="card-cvv" class="form-label">CVV</label>
                      <input type="text" id="card-cvv" name="card-cvv" class="form-control" placeholder="123" required>
                    </div>
                  </div>
                </div>
              </div>
              
              <div id="paypal-payment-fields" class="mt-3" style="display: none;">
                <div class="form-group">
                  <p>You will be redirected to PayPal to complete your payment after you click "Complete Order".</p>
                </div>
              </div>
              
              <div class="form-group">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="terms" name="terms" required>
                  <label class="form-check-label" for="terms">I agree to the <a href="/terms" target="_blank">Terms and Conditions</a> and <a href="/privacy" target="_blank">Privacy Policy</a></label>
                </div>
              </div>
              
              <div class="btn-group">
                <button type="button" class="btn btn-outline" id="btn-back-4"><span class="icon">←</span> Back</button>
                <button type="submit" class="btn btn-success" id="btn-submit">Complete Order</button>
              </div>
            </div>
            
            <!-- Success Message (shown after form submission) -->
            <div id="success-message" class="success-message">
              <div class="success-icon">✅</div>
              <h3>Shipment Created Successfully!</h3>
              <p>Your tracking number is: <strong id="tracking-number">SL123456789</strong></p>
              <p class="mt-2">We've sent a confirmation email with all the details to your email address.</p>
              <div class="mt-3">
                <a href="/shipment/track" class="btn btn-primary">Track Your Shipment</a>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // DOM Elements
      const form = document.getElementById('shipment-form');
      const progressBar = document.getElementById('progress-bar');
      const steps = document.querySelectorAll('.step-form');
      const progressSteps = document.querySelectorAll('.progress-step');
      const successMessage = document.getElementById('success-message');
      
      // Current step tracking
      let currentStep = 1;
      const totalSteps = steps.length;
      
      // Initialize form
      updateProgressBar();
      
      // Navigation buttons
      document.getElementById('btn-step-1').addEventListener('click', () => nextStep(2));
      document.getElementById('btn-step-2').addEventListener('click', () => nextStep(3));
      document.getElementById('btn-step-3').addEventListener('click', () => nextStep(4));
      document.getElementById('btn-step-4').addEventListener('click', () => nextStep(5));
      
      document.getElementById('btn-back-1').addEventListener('click', () => prevStep(1));
      document.getElementById('btn-back-2').addEventListener('click', () => prevStep(2));
      document.getElementById('btn-back-3').addEventListener('click', () => prevStep(3));
      document.getElementById('btn-back-4').addEventListener('click', () => prevStep(4));
      
      // Same as origin address checkbox
      const sameAsOriginCheckbox = document.getElementById('same-as-origin');
      const destinationFields = document.getElementById('destination-address-fields');
      
      sameAsOriginCheckbox.addEventListener('change', function() {
        if (this.checked) {
          destinationFields.style.display = 'none';
          
          // Copy values from origin to destination
          document.getElementById('destination-address').value = document.getElementById('origin-address').value;
          document.getElementById('destination-city').value = document.getElementById('origin-city').value;
          document.getElementById('destination-postal-code').value = document.getElementById('origin-postal-code').value;
          document.getElementById('destination-state').value = document.getElementById('origin-state').value;
          document.getElementById('destination-country').value = document.getElementById('origin-country').value;
        } else {
          destinationFields.style.display = 'block';
        }
      });
      
      // Insurance checkbox toggle
      const insuranceCheckbox = document.getElementById('insurance');
      const insuranceValueGroup = document.getElementById('insurance-value-group');
      
      insuranceCheckbox.addEventListener('change', function() {
        insuranceValueGroup.classList.toggle('hidden', !this.checked);
        
        if (currentStep === 5) {
          updateOrderSummary();
        }
      });
      
      // Payment method toggle
      const paymentMethods = document.querySelectorAll('.payment-method');
      const cardFields = document.getElementById('card-payment-fields');
      const paypalFields = document.getElementById('paypal-payment-fields');
      
      paymentMethods.forEach(method => {
        method.addEventListener('click', function() {
          const methodType = this.getAttribute('data-method');
          
          // Update radio button
          this.querySelector('input[type="radio"]').checked = true;
          
          // Toggle selected class
          paymentMethods.forEach(m => m.classList.remove('selected'));
          this.classList.add('selected');
          
          // Show/hide appropriate fields
          if (methodType === 'card') {
            cardFields.style.display = 'block';
            paypalFields.style.display = 'none';
          } else if (methodType === 'paypal') {
            cardFields.style.display = 'none';
            paypalFields.style.display = 'block';
          }
        });
      });
      
      // Shipping options
      const shippingOptions = document.querySelectorAll('.shipping-option');
      
      shippingOptions.forEach(option => {
        option.addEventListener('click', function() {
          const radio = this.querySelector('input[type="radio"]');
          radio.checked = true;
          
          shippingOptions.forEach(opt => opt.classList.remove('selected'));
          this.classList.add('selected');
          
          if (currentStep === 5) {
            updateOrderSummary();
          }
        });
      });
      
      // Saturday delivery checkbox
      const saturdayDelivery = document.getElementById('saturday-delivery');
      saturdayDelivery.addEventListener('change', function() {
        if (currentStep === 5) {
          updateOrderSummary();
        }
      });
      
      // Update declared value
      const declaredValue = document.getElementById('declared-value');
      declaredValue.addEventListener('input', function() {
        if (currentStep === 5) {
          updateOrderSummary();
        }
      });
      
      // Form submission
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (!validateStep(currentStep)) {
          return;
        }
        
        // In a real application, you would send the data to the server here
        // This is just a simulation
        form.style.display = 'none';
        document.querySelector('.progress-container').style.display = 'none';
        successMessage.style.display = 'block';
        
        // Generate a fake tracking number
        const randomNum = Math.floor(Math.random() * 10000000);
        document.getElementById('tracking-number').textContent = `SL${randomNum.toString().padStart(9, '0')}`;
      });
      
      // Functions
      function nextStep(step) {
        if (validateStep(currentStep)) {
          steps[currentStep - 1].classList.remove('active');
          steps[step - 1].classList.add('active');
          currentStep = step;
          updateProgressBar();
          
          if (currentStep === 5) {
            updateOrderSummary();
          }
          
          // Scroll to top of form
          document.querySelector('.card').scrollIntoView({ behavior: 'smooth' });
        }
      }
      
      function prevStep(step) {
        steps[currentStep - 1].classList.remove('active');
        steps[step - 1].classList.add('active');
        currentStep = step;
        updateProgressBar();
        
        // Scroll to top of form
        document.querySelector('.card').scrollIntoView({ behavior: 'smooth' });
      }
      
      function updateProgressBar() {
        const percent = ((currentStep - 1) / (totalSteps - 1)) * 100;
        progressBar.style.width = `${percent}%`;
        
        // Update progress steps
        progressSteps.forEach((step, index) => {
          const stepNum = index + 1;
          
          if (stepNum < currentStep) {
            step.classList.add('completed');
            step.classList.remove('active');
          } else if (stepNum === currentStep) {
            step.classList.add('active');
            step.classList.remove('completed');
          } else {
            step.classList.remove('active', 'completed');
          }
        });
      }
      
      function validateStep(step) {
        const currentStepEl = steps[step - 1];
        const requiredFields = currentStepEl.querySelectorAll('[required]:not([type="hidden"])');
        let isValid = true;
        
        requiredFields.forEach(field => {
          // Reset validation state
          field.classList.remove('is-invalid');
          const feedbackEl = field.nextElementSibling;
          if (feedbackEl && feedbackEl.classList.contains('invalid-feedback')) {
            feedbackEl.style.display = 'none';
          }
          
          if (!field.checkValidity()) {
            isValid = false;
            field.classList.add('is-invalid');
            
            // Add validation message if not already present
            let feedbackElement = field.nextElementSibling;
            if (!feedbackElement || !feedbackElement.classList.contains('invalid-feedback')) {
              feedbackElement = document.createElement('div');
              feedbackElement.className = 'invalid-feedback';
              feedbackElement.textContent = field.validationMessage || 'This field is required';
              field.parentNode.insertBefore(feedbackElement, field.nextSibling);
            }
            
            feedbackElement.style.display = 'block';
          }
        });
        
        return isValid;
      }
      
      function updateOrderSummary() {
        // Get selected shipping method
        const selectedShipping = document.querySelector('input[name="shipping-method"]:checked');
        if (!selectedShipping) return;
        
        const shippingMethod = selectedShipping.value;
        const shippingPrice = parseFloat(selectedShipping.getAttribute('data-price'));
        
        // Calculate additional services
        const saturdayDelivery = document.getElementById('saturday-delivery').checked;
        const saturdayPrice = saturdayDelivery ? 12.50 : 0;
        
        // Calculate insurance if checked
        const insurance = document.getElementById('insurance').checked;
        let insurancePrice = 0;
        
        if (insurance) {
          const declaredValue = parseFloat(document.getElementById('declared-value').value) || 0;
          insurancePrice = declaredValue * 0.02; // 2% of declared value
        }
        
        // Calculate subtotal and VAT
        const subtotal = shippingPrice + saturdayPrice + insurancePrice;
        const vat = subtotal * 0.2; // 20% VAT
        const total = subtotal + vat;
        
        // Update summary
        document.getElementById('summary-service').textContent = 
          shippingMethod.charAt(0).toUpperCase() + shippingMethod.slice(1) + ' Delivery';
        document.getElementById('summary-shipping').textContent = `£${shippingPrice.toFixed(2)}`;
        
        // Show/hide Saturday delivery row
        const saturdayRow = document.getElementById('summary-row-saturday');
        saturdayRow.style.display = saturdayDelivery ? 'flex' : 'none';
        
        // Show/hide insurance row
        const insuranceRow = document.getElementById('summary-row-insurance');
        insuranceRow.style.display = insurance ? 'flex' : 'none';
        document.getElementById('summary-insurance').textContent = `£${insurancePrice.toFixed(2)}`;
        
        document.getElementById('summary-vat').textContent = `£${vat.toFixed(2)}`;
        document.getElementById('summary-total').textContent = `£${total.toFixed(2)}`;
      }
      
      // Initialize first shipping option as selected
      if (shippingOptions.length > 0) {
        shippingOptions[0].click();
      }
      
      // Initialize first payment method as selected
      if (paymentMethods.length > 0) {
        paymentMethods[0].classList.add('selected');
      }
    });
  </script>